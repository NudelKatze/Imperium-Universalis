# AVAILABLE CUSTOM LOCALISATION KEYS
# When adding new custom loc keys, add them to the appropriate category (or add a new one) and describe them. Name the strings "String_X" where x is its content.
# To not display anything, you can use 'localisation_key = ""'
# Please add one example sentence for each key.

# As this list grow organize with categories.
# GetLowLevelOfficialForCountry

# GetNobilityOrFallbackName
# GetMerchantsOrFallbackName
# GetPriesthoodOrFallbackName
# GetClansOrFallbackName
# GetSlavesOrFallbackName

# GetRulerTitleOrRegency
# GetUsableName
# GetStateForm

# GetEventAdvisorName
# GetEventAdvisorTitle
# GetEventAdvisorSheHeCap
# GetEventAdvisorSheHe
# GetEventAdvisorHerHisCap
# GetEventAdvisorHerHis
# GetEventAdvisorHerHim


#Low Level Official
#Ex: "A local [Mandarin] immediately reacted to the..."
defined_text = {
	name = GetLowLevelOfficialForCountry

	# TODO

	text = {
		localisation_key = string_official
		trigger = {
			always = yes
		}
	}
}

#######################################################################################
### Estate scripted locs: Get current estate name, or if the country lacks one, use the basic one
#######################################################################################

defined_text = {
	name = GetNobilityOrFallbackName
	random = no

	# TODO

	text = {
		localisation_key = estate_nobility
		trigger = {
			always = yes
		}
	}
}

defined_text = {
	name = GetMerchantsOrFallbackName
	random = no

	# TODO

	text = {
		localisation_key = estate_merchants
		trigger = {
			always = yes
		}
	}
}

defined_text = {
	name = GetPriesthoodOrFallbackName
	random = no

	# TODO

	text = {
		localisation_key = estate_priests
		trigger = {
			always = yes
		}
	}
}

defined_text = {
	name = GetClansOrFallbackName
	random = no

	# TODO

	text = {
		localisation_key = estate_clans
		trigger = {
			always = yes
		}
	}
}

defined_text = {
	name = GetSlavesOrFallbackName
	random = no

	# TODO

	text = {
		localisation_key = estate_slaves
		trigger = {
			always = yes
		}
	}
}

#######################################################################################
### Ruler/government
#######################################################################################

# Gets ruler title or regency council (not strictly speaking necessary as it will still find "king" even if said king is 1 year old)
# Ex: The [King] / The [Regency Council]
defined_text = {
	name = GetRulerTitleOrRegency

	text = {
		localisation_key = string_ruler_title
		trigger = {
			has_regency = no
		}
	}
	text = {
		localisation_key = string_regency_council_2
		trigger = {
			has_regency = yes
		}
	}
}

#Makes the country name usable (grammatically) in normal text. So examples of what comes out are "France", "the Ottoman Sultanate", "the Ming Empire" and "the Iroquoi Tribe" (I am open to suggestions on the last) rather than "France", "Ottomans", "Ming" and "Iroquoi"
defined_text = {
	name = GetUsableName
	random = no

	text = {
		localisation_key = plural_country_name
		trigger = {
			# TODO
			always = no
		}
	}
	text = {
		localisation_key = already_has_proper_name
		trigger = {
			always = yes
		}
	}
}

# When you need to refer a government/state
# In the future incorporate more special things here
# Ex: "The [Crown] of X"
defined_text = {
	name = GetStateForm

	text = {
		localisation_key = string_crown
		trigger = { government = monarchy }
	}
	text = {
		localisation_key = string_council
		trigger = { government = republic }
	}
	text = { #fallback
		localisation_key = string_govtname
		trigger = {
			NOT = {
				government = monarchy
				government = republic
			}
		}
	}
}

#######################################################################################
### Event Advisors (if you want to use this system, remember to set the flags and remove them once they are no longer needed so the custom locs can be used again for the next event)
#######################################################################################

#GetName of the correct advisor
defined_text = {
	name = GetEventAdvisorName
	random = no

	text = {
		localisation_key = EventAdvisorName.A
		trigger = {
			has_country_flag = advisor_events_adm
		}
	}

	text = {
		localisation_key = EventAdvisorName.D
		trigger = {
			has_country_flag = advisor_events_dip
		}
	}

	text = {
		localisation_key = EventAdvisorName.M
		trigger = {
			has_country_flag = advisor_events_mil
		}
	}
}

#GetTitle of the correct advisor
defined_text = {
	name = GetEventAdvisorTitle
	random = no

	text = {
		localisation_key = EventAdvisorTitle.A
		trigger = {
			has_country_flag = advisor_events_adm
		}
	}

	text = {
		localisation_key = EventAdvisorTitle.D
		trigger = {
			has_country_flag = advisor_events_dip
		}
	}

	text = {
		localisation_key = EventAdvisorTitle.M
		trigger = {
			has_country_flag = advisor_events_mil
		}
	}
}

#GetSheHeCap of the correct advisor
defined_text = {
	name = GetEventAdvisorSheHeCap
	random = no

	text = {
		localisation_key = EventAdvisorSheHeCap.A
		trigger = {
			has_country_flag = advisor_events_adm
		}
	}

	text = {
		localisation_key = EventAdvisorSheHeCap.D
		trigger = {
			has_country_flag = advisor_events_dip
		}
	}

	text = {
		localisation_key = EventAdvisorSheHeCap.M
		trigger = {
			has_country_flag = advisor_events_mil
		}
	}
}

#GetSheHe of the correct advisor
defined_text = {
	name = GetEventAdvisorSheHe
	random = no

	text = {
		localisation_key = EventAdvisorSheHe.A
		trigger = {
			has_country_flag = advisor_events_adm
		}
	}

	text = {
		localisation_key = EventAdvisorSheHe.D
		trigger = {
			has_country_flag = advisor_events_dip
		}
	}

	text = {
		localisation_key = EventAdvisorSheHe.M
		trigger = {
			has_country_flag = advisor_events_mil
		}
	}
}

#GetHerHisCap of the correct advisor
defined_text = {
	name = GetEventAdvisorHerHisCap
	random = no

	text = {
		localisation_key = EventAdvisorHerHisCap.A
		trigger = {
			has_country_flag = advisor_events_adm
		}
	}

	text = {
		localisation_key = EventAdvisorHerHisCap.D
		trigger = {
			has_country_flag = advisor_events_dip
		}
	}

	text = {
		localisation_key = EventAdvisorHerHisCap.M
		trigger = {
			has_country_flag = advisor_events_mil
		}
	}
}

#GetHerHis of the correct advisor
defined_text = {
	name = GetEventAdvisorHerHis
	random = no

	text = {
		localisation_key = EventAdvisorHerHis.A
		trigger = {
			has_country_flag = advisor_events_adm
		}
	}

	text = {
		localisation_key = EventAdvisorHerHis.D
		trigger = {
			has_country_flag = advisor_events_dip
		}
	}

	text = {
		localisation_key = EventAdvisorHerHis.M
		trigger = {
			has_country_flag = advisor_events_mil
		}
	}
}

#GetHerHim of the correct advisor
defined_text = {
	name = GetEventAdvisorHerHim
	random = no

	text = {
		localisation_key = EventAdvisorHerHim.A
		trigger = {
			has_country_flag = advisor_events_adm
		}
	}

	text = {
		localisation_key = EventAdvisorHerHim.D
		trigger = {
			has_country_flag = advisor_events_dip
		}
	}

	text = {
		localisation_key = EventAdvisorHerHim.M
		trigger = {
			has_country_flag = advisor_events_mil
		}
	}
}